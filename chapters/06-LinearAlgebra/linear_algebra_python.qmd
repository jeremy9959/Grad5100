## Overview of linear algebra operations in python

The `numpy` library is the main tool for linear algebra in python.

```{python}
import numpy as np
import pandas as pd

```

## Creating and shaping arrays

```{python}
m = np.array([1, 2, 3, 4, 5, 6, 7, 8])
print("Array {} with shape {} (a row vector)".format(m, m.shape))
print("Reshaped array to shape (2,4):\n {}".format(m.reshape((2, 4))))
print("Reshaped array to column vector:\n {}".format(m.reshape(8, 1)))
```

## Some special arrays

```{python}
one = np.ones(shape=(3, 4))
print(one)
zero = np.zeros(shape=(3, 3))
print(zero)
d = np.diag([1, 2, 3, 4])
print(d)
```


## Addition and scalar multiplication

```{python}
x = np.random.normal(size=(4,))
y = np.random.normal(size=(4,))
print(x + y)
u = np.random.normal(size=(2,))
try:
    print(x + u)
except:
    print("Cant Mix These")
```

## Broadcasting

```{python}
x = np.array([[1, 2], [3, 4]])
print("x={}".format(x))
print("x-1={}".format(x - 1))
z = np.array([1, 2])
print("z={}".format(z))
print("x-z={}".format(x - z))
z = np.array([[3], [4]])
print("z={}".format(z))
print("x-z={}".format(x - z))
```

## Element by Element

```{python}
x = np.array([[1, 2, 3], [2, 3, 4], [4, 5, 6]])
print(1 / x)
print(np.log(x))
```

## Multiplication

```{python}
x = np.random.normal(size=(3, 4))
print(x)
y = np.random.normal(size=(4, 1))
print(y)
print(x @ y)
```

## Transpose

```{python}
x = np.array([[1, 2, 3], [2, 3, 4], [3, 4, 5]])
print(x)
print(x.transpose())
```

## Norm
```{python}
x = np.array([[1, 2], [3, 4]])
print(x)
y = np.linalg.norm(x)
print(y)
y = np.linalg.norm(x, axis=0)
print("axis=0 yields row norms: {}".format(y))
y = np.linalg.norm(x, axis=1)
print("axis=1 yields column norms: {}".format(y))
```

## Dataframes and matrices

```{python}
data = pd.read_csv("data/penguins-raw.csv")
print(data[["Body Mass (g)"]])
print(data[["Body Mass (g)"]].values)
```

## Datatypes

```{python}
x = np.array([[1, 2, 3], [2, 3, 4]], dtype=int)
print(x)
y = np.array([[1, 2, 3], [2, 3, 4]], dtype=float)
print(y)
print(x + y)
```